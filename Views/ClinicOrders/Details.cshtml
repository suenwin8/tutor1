@model tutor1.Models.DTO.ClinicOrderDTO

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>ClinicOrder</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.clinicOrder_seqid)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.clinicOrder_seqid)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.DateOfClinicOrder)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfClinicOrder)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.seeDoctor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.seeDoctor)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Amount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Amount)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.LastUpdatedTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastUpdatedTime)
        </dd>
        <table class="table" id="details">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.OrderDetails.FirstOrDefault().ClinicOrderDetailID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OrderDetails.FirstOrDefault().Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OrderDetails.FirstOrDefault().product.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OrderDetails.FirstOrDefault().product.Price)
                    </th>
                </tr>
            </thead>
            <tbody>
                @{ var row = 0;
                    @foreach (var item in Model.OrderDetails)
                    {
                        <tr>
                            <td>

                                @*<input type='hidden'
                                    name="ClinicOrderID_'+@row+'"
                                    value='@item.ClinicOrderID' />*@
                                @Html.HiddenFor(modelItem => item.ClinicOrderID, new { id = "ClinicOrderID" })
                                @Html.DisplayFor(modelItem => item.ClinicOrderDetailID, new { id = "ClinicOrderDetailID" })
                                @Html.HiddenFor(modelItem => item.ProductID, new { id = "ProductID" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity, new { id = "Quantity" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.product.Name, new { id = "Name" })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price, new { id = "Price" })
                            </td>
                        </tr>
                        row++;
                    }
                }
            </tbody>
            <tfoot>                
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td><label id="lb_TotalAmount" for="lb_TotalAmount"></label></td>                    
                </tr>
            </tfoot>
        </table>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ClinicOrderId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>

    const form = document.querySelector('.contact-form');
    let details = [];
    let products = [];
    $(document).ready(function () {       
        $("#lb_TotalAmount").text(@Model.Amount);
    });
   
</script>
